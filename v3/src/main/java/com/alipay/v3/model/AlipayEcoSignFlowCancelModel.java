/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-06-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayEcoSignFlowCancelModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayEcoSignFlowCancelModel {
  public static final String SERIALIZED_NAME_FLOW_ID = "flow_id";
  @SerializedName(SERIALIZED_NAME_FLOW_ID)
  private String flowId;

  public static final String SERIALIZED_NAME_REVOKE_REASON = "revoke_reason";
  @SerializedName(SERIALIZED_NAME_REVOKE_REASON)
  private String revokeReason;

  public AlipayEcoSignFlowCancelModel() { 
  }

  public AlipayEcoSignFlowCancelModel flowId(String flowId) {
    
    this.flowId = flowId;
    return this;
  }

   /**
   * 流程id，通过 &lt;a href &#x3D;\&quot;https://opendocs.alipay.com/apis/api_50/alipay.eco.contract.signflows.create\&quot;&gt;创建电子合同签署流程&lt;/a&gt;(alipay.eco.contract.signflows.create)接口获取。
   * @return flowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "429b1d3038854cabbcdac0a63d7e4c0d", value = "流程id，通过 <a href =\"https://opendocs.alipay.com/apis/api_50/alipay.eco.contract.signflows.create\">创建电子合同签署流程</a>(alipay.eco.contract.signflows.create)接口获取。")

  public String getFlowId() {
    return flowId;
  }


  public void setFlowId(String flowId) {
    this.flowId = flowId;
  }


  public AlipayEcoSignFlowCancelModel revokeReason(String revokeReason) {
    
    this.revokeReason = revokeReason;
    return this;
  }

   /**
   * 撤销原因，默认为\&quot;撤销\&quot;。商家可自定义。
   * @return revokeReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "合同内容不符，拒签", value = "撤销原因，默认为\"撤销\"。商家可自定义。")

  public String getRevokeReason() {
    return revokeReason;
  }


  public void setRevokeReason(String revokeReason) {
    this.revokeReason = revokeReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayEcoSignFlowCancelModel alipayEcoSignFlowCancelModel = (AlipayEcoSignFlowCancelModel) o;
    return Objects.equals(this.flowId, alipayEcoSignFlowCancelModel.flowId) &&
        Objects.equals(this.revokeReason, alipayEcoSignFlowCancelModel.revokeReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(flowId, revokeReason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayEcoSignFlowCancelModel {\n");
    sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
    sb.append("    revokeReason: ").append(toIndentedString(revokeReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("flow_id");
    openapiFields.add("revoke_reason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayEcoSignFlowCancelModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayEcoSignFlowCancelModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayEcoSignFlowCancelModel is not found in the empty JSON string", AlipayEcoSignFlowCancelModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayEcoSignFlowCancelModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayEcoSignFlowCancelModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("flow_id") != null && !jsonObj.get("flow_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flow_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flow_id").toString()));
      }
      if (jsonObj.get("revoke_reason") != null && !jsonObj.get("revoke_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revoke_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revoke_reason").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayEcoSignFlowCancelModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayEcoSignFlowCancelModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayEcoSignFlowCancelModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayEcoSignFlowCancelModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayEcoSignFlowCancelModel>() {
           @Override
           public void write(JsonWriter out, AlipayEcoSignFlowCancelModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayEcoSignFlowCancelModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayEcoSignFlowCancelModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayEcoSignFlowCancelModel
  * @throws IOException if the JSON string is invalid with respect to AlipayEcoSignFlowCancelModel
  */
  public static AlipayEcoSignFlowCancelModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayEcoSignFlowCancelModel.class);
  }

 /**
  * Convert an instance of AlipayEcoSignFlowCancelModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

