/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-09-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.Gavintest;
import com.alipay.v3.model.GavintestNewLeveaOne;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayOpenBizCreateModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayOpenBizCreateModel {
  public static final String SERIALIZED_NAME_A = "a";
  @SerializedName(SERIALIZED_NAME_A)
  private Gavintest a;

  public static final String SERIALIZED_NAME_B = "b";
  @SerializedName(SERIALIZED_NAME_B)
  private String b;

  public static final String SERIALIZED_NAME_DE = "de";
  @SerializedName(SERIALIZED_NAME_DE)
  private GavintestNewLeveaOne de;

  public static final String SERIALIZED_NAME_STRINGBUFF = "stringbuff";
  @SerializedName(SERIALIZED_NAME_STRINGBUFF)
  private String stringbuff;

  public AlipayOpenBizCreateModel() { 
  }

  public AlipayOpenBizCreateModel a(Gavintest a) {
    
    this.a = a;
    return this;
  }

   /**
   * Get a
   * @return a
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Gavintest getA() {
    return a;
  }


  public void setA(Gavintest a) {
    this.a = a;
  }


  public AlipayOpenBizCreateModel b(String b) {
    
    this.b = b;
    return this;
  }

   /**
   * 1
   * @return b
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "21", value = "1")

  public String getB() {
    return b;
  }


  public void setB(String b) {
    this.b = b;
  }


  public AlipayOpenBizCreateModel de(GavintestNewLeveaOne de) {
    
    this.de = de;
    return this;
  }

   /**
   * Get de
   * @return de
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GavintestNewLeveaOne getDe() {
    return de;
  }


  public void setDe(GavintestNewLeveaOne de) {
    this.de = de;
  }


  public AlipayOpenBizCreateModel stringbuff(String stringbuff) {
    
    this.stringbuff = stringbuff;
    return this;
  }

   /**
   * 1
   * @return stringbuff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "1")

  public String getStringbuff() {
    return stringbuff;
  }


  public void setStringbuff(String stringbuff) {
    this.stringbuff = stringbuff;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayOpenBizCreateModel alipayOpenBizCreateModel = (AlipayOpenBizCreateModel) o;
    return Objects.equals(this.a, alipayOpenBizCreateModel.a) &&
        Objects.equals(this.b, alipayOpenBizCreateModel.b) &&
        Objects.equals(this.de, alipayOpenBizCreateModel.de) &&
        Objects.equals(this.stringbuff, alipayOpenBizCreateModel.stringbuff);
  }

  @Override
  public int hashCode() {
    return Objects.hash(a, b, de, stringbuff);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayOpenBizCreateModel {\n");
    sb.append("    a: ").append(toIndentedString(a)).append("\n");
    sb.append("    b: ").append(toIndentedString(b)).append("\n");
    sb.append("    de: ").append(toIndentedString(de)).append("\n");
    sb.append("    stringbuff: ").append(toIndentedString(stringbuff)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("a");
    openapiFields.add("b");
    openapiFields.add("de");
    openapiFields.add("stringbuff");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayOpenBizCreateModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayOpenBizCreateModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayOpenBizCreateModel is not found in the empty JSON string", AlipayOpenBizCreateModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayOpenBizCreateModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayOpenBizCreateModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `a`
      if (jsonObj.getAsJsonObject("a") != null) {
        Gavintest.validateJsonObject(jsonObj.getAsJsonObject("a"));
      }
      if (jsonObj.get("b") != null && !jsonObj.get("b").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `b` to be a primitive type in the JSON string but got `%s`", jsonObj.get("b").toString()));
      }
      // validate the optional field `de`
      if (jsonObj.getAsJsonObject("de") != null) {
        GavintestNewLeveaOne.validateJsonObject(jsonObj.getAsJsonObject("de"));
      }
      if (jsonObj.get("stringbuff") != null && !jsonObj.get("stringbuff").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringbuff` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringbuff").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayOpenBizCreateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayOpenBizCreateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayOpenBizCreateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayOpenBizCreateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayOpenBizCreateModel>() {
           @Override
           public void write(JsonWriter out, AlipayOpenBizCreateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayOpenBizCreateModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayOpenBizCreateModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayOpenBizCreateModel
  * @throws IOException if the JSON string is invalid with respect to AlipayOpenBizCreateModel
  */
  public static AlipayOpenBizCreateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayOpenBizCreateModel.class);
  }

 /**
  * Convert an instance of AlipayOpenBizCreateModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

