/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-09-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.GoodsInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * KoubeiTradeOrderConsultModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KoubeiTradeOrderConsultModel {
  public static final String SERIALIZED_NAME_APDID_TOKEN = "apdid_token";
  @SerializedName(SERIALIZED_NAME_APDID_TOKEN)
  private String apdidToken;

  public static final String SERIALIZED_NAME_GOODS_INFO = "goods_info";
  @SerializedName(SERIALIZED_NAME_GOODS_INFO)
  private List<GoodsInfo> goodsInfo = null;

  public static final String SERIALIZED_NAME_REQUEST_ID = "request_id";
  @SerializedName(SERIALIZED_NAME_REQUEST_ID)
  private String requestId;

  public static final String SERIALIZED_NAME_SHOP_ID = "shop_id";
  @SerializedName(SERIALIZED_NAME_SHOP_ID)
  private String shopId;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT = "total_amount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT)
  private String totalAmount;

  public static final String SERIALIZED_NAME_UNDISCOUNTABLE_AMOUNT = "undiscountable_amount";
  @SerializedName(SERIALIZED_NAME_UNDISCOUNTABLE_AMOUNT)
  private String undiscountableAmount;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public KoubeiTradeOrderConsultModel() { 
  }

  public KoubeiTradeOrderConsultModel apdidToken(String apdidToken) {
    
    this.apdidToken = apdidToken;
    return this;
  }

   /**
   * 用户设备信息,通过钱包容器提供的JSAPI接口获取，  一、接口使用方法：  AlipayJSBridge.call(&#39;getO2ODeviceToken&#39;, {                  appName: &#39;kb_isv_110229&#39;,                  appKey:&#39;98y6VvdaDLpoqWZw&#39;              },              function (result) {                   }          );      });  二、result数据结构：   1、调用失败： {\&quot;error\&quot;:xxx,\&quot;errorMessage\&quot;:\&quot;xxx\&quot;}     2、调用成功： {&#39;appToken&#39;:&#39;xxxssajkjkjkxdkwqkqwb&#39;}
   * @return apdidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "FItOt3WEvOe0Re4NLgrUINWSP8B2AVOdSp1YTotRG7LAJos1tPJMbes4/GTrJew5/ITdibdWlv8XsEnfwuCyntY6eAO0M84ivvie4JyH19vYUnk58HYVs3XnjzgSY0Uw", value = "用户设备信息,通过钱包容器提供的JSAPI接口获取，  一、接口使用方法：  AlipayJSBridge.call('getO2ODeviceToken', {                  appName: 'kb_isv_110229',                  appKey:'98y6VvdaDLpoqWZw'              },              function (result) {                   }          );      });  二、result数据结构：   1、调用失败： {\"error\":xxx,\"errorMessage\":\"xxx\"}     2、调用成功： {'appToken':'xxxssajkjkjkxdkwqkqwb'}")

  public String getApdidToken() {
    return apdidToken;
  }


  public void setApdidToken(String apdidToken) {
    this.apdidToken = apdidToken;
  }


  public KoubeiTradeOrderConsultModel goodsInfo(List<GoodsInfo> goodsInfo) {
    
    this.goodsInfo = goodsInfo;
    return this;
  }

  public KoubeiTradeOrderConsultModel addGoodsInfoItem(GoodsInfo goodsInfoItem) {
    if (this.goodsInfo == null) {
      this.goodsInfo = new ArrayList<>();
    }
    this.goodsInfo.add(goodsInfoItem);
    return this;
  }

   /**
   * 商品明细列表。注意：单品总金额不能大于订单金额
   * @return goodsInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "商品明细列表。注意：单品总金额不能大于订单金额")

  public List<GoodsInfo> getGoodsInfo() {
    return goodsInfo;
  }


  public void setGoodsInfo(List<GoodsInfo> goodsInfo) {
    this.goodsInfo = goodsInfo;
  }


  public KoubeiTradeOrderConsultModel requestId(String requestId) {
    
    this.requestId = requestId;
    return this;
  }

   /**
   * 唯一请求id，开放者请确保每次请求的唯一性。
   * @return requestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0ad1e47b1500473065347103327127", value = "唯一请求id，开放者请确保每次请求的唯一性。")

  public String getRequestId() {
    return requestId;
  }


  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public KoubeiTradeOrderConsultModel shopId(String shopId) {
    
    this.shopId = shopId;
    return this;
  }

   /**
   * 支付宝门店编号
   * @return shopId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015051100077000000000000300", value = "支付宝门店编号")

  public String getShopId() {
    return shopId;
  }


  public void setShopId(String shopId) {
    this.shopId = shopId;
  }


  public KoubeiTradeOrderConsultModel totalAmount(String totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * 订单总金额，单位元，精确到小数点后两位，取值范围[0.01,999999999]。 注意：如果同时传入了【不可打折金额】，【订单总金额】两者，则必须满足【不可打折金额】&lt;&#x3D;【订单总金额】。
   * @return totalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "88.88", value = "订单总金额，单位元，精确到小数点后两位，取值范围[0.01,999999999]。 注意：如果同时传入了【不可打折金额】，【订单总金额】两者，则必须满足【不可打折金额】<=【订单总金额】。")

  public String getTotalAmount() {
    return totalAmount;
  }


  public void setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
  }


  public KoubeiTradeOrderConsultModel undiscountableAmount(String undiscountableAmount) {
    
    this.undiscountableAmount = undiscountableAmount;
    return this;
  }

   /**
   * 不参与优惠计算的金额，单位为元，精确到小数点后两位，取值范围[0,999999999]。 注意：如果同时传入了【不可打折金额】、【订单总金额】，则必须满足【不可打折金额】&lt;&#x3D;【订单总金额】。
   * @return undiscountableAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10.00", value = "不参与优惠计算的金额，单位为元，精确到小数点后两位，取值范围[0,999999999]。 注意：如果同时传入了【不可打折金额】、【订单总金额】，则必须满足【不可打折金额】<=【订单总金额】。")

  public String getUndiscountableAmount() {
    return undiscountableAmount;
  }


  public void setUndiscountableAmount(String undiscountableAmount) {
    this.undiscountableAmount = undiscountableAmount;
  }


  public KoubeiTradeOrderConsultModel userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * 支付宝用户 Id，用户在支付宝的唯一标识，以 2088 开头的 16 位纯数字组成。
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2088212151390950", value = "支付宝用户 Id，用户在支付宝的唯一标识，以 2088 开头的 16 位纯数字组成。")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KoubeiTradeOrderConsultModel koubeiTradeOrderConsultModel = (KoubeiTradeOrderConsultModel) o;
    return Objects.equals(this.apdidToken, koubeiTradeOrderConsultModel.apdidToken) &&
        Objects.equals(this.goodsInfo, koubeiTradeOrderConsultModel.goodsInfo) &&
        Objects.equals(this.requestId, koubeiTradeOrderConsultModel.requestId) &&
        Objects.equals(this.shopId, koubeiTradeOrderConsultModel.shopId) &&
        Objects.equals(this.totalAmount, koubeiTradeOrderConsultModel.totalAmount) &&
        Objects.equals(this.undiscountableAmount, koubeiTradeOrderConsultModel.undiscountableAmount) &&
        Objects.equals(this.userId, koubeiTradeOrderConsultModel.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apdidToken, goodsInfo, requestId, shopId, totalAmount, undiscountableAmount, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KoubeiTradeOrderConsultModel {\n");
    sb.append("    apdidToken: ").append(toIndentedString(apdidToken)).append("\n");
    sb.append("    goodsInfo: ").append(toIndentedString(goodsInfo)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    shopId: ").append(toIndentedString(shopId)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    undiscountableAmount: ").append(toIndentedString(undiscountableAmount)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apdid_token");
    openapiFields.add("goods_info");
    openapiFields.add("request_id");
    openapiFields.add("shop_id");
    openapiFields.add("total_amount");
    openapiFields.add("undiscountable_amount");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KoubeiTradeOrderConsultModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (KoubeiTradeOrderConsultModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in KoubeiTradeOrderConsultModel is not found in the empty JSON string", KoubeiTradeOrderConsultModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KoubeiTradeOrderConsultModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KoubeiTradeOrderConsultModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("apdid_token") != null && !jsonObj.get("apdid_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apdid_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apdid_token").toString()));
      }
      JsonArray jsonArraygoodsInfo = jsonObj.getAsJsonArray("goods_info");
      if (jsonArraygoodsInfo != null) {
        // ensure the json data is an array
        if (!jsonObj.get("goods_info").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `goods_info` to be an array in the JSON string but got `%s`", jsonObj.get("goods_info").toString()));
        }

        // validate the optional field `goods_info` (array)
        for (int i = 0; i < jsonArraygoodsInfo.size(); i++) {
          GoodsInfo.validateJsonObject(jsonArraygoodsInfo.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("request_id") != null && !jsonObj.get("request_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_id").toString()));
      }
      if (jsonObj.get("shop_id") != null && !jsonObj.get("shop_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_id").toString()));
      }
      if (jsonObj.get("total_amount") != null && !jsonObj.get("total_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_amount").toString()));
      }
      if (jsonObj.get("undiscountable_amount") != null && !jsonObj.get("undiscountable_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `undiscountable_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("undiscountable_amount").toString()));
      }
      if (jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KoubeiTradeOrderConsultModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KoubeiTradeOrderConsultModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KoubeiTradeOrderConsultModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KoubeiTradeOrderConsultModel.class));

       return (TypeAdapter<T>) new TypeAdapter<KoubeiTradeOrderConsultModel>() {
           @Override
           public void write(JsonWriter out, KoubeiTradeOrderConsultModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KoubeiTradeOrderConsultModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KoubeiTradeOrderConsultModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KoubeiTradeOrderConsultModel
  * @throws IOException if the JSON string is invalid with respect to KoubeiTradeOrderConsultModel
  */
  public static KoubeiTradeOrderConsultModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KoubeiTradeOrderConsultModel.class);
  }

 /**
  * Convert an instance of KoubeiTradeOrderConsultModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

