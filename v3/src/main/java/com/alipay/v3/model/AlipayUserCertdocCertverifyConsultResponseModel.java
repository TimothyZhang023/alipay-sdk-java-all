/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-08-14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayUserCertdocCertverifyConsultResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayUserCertdocCertverifyConsultResponseModel {
  public static final String SERIALIZED_NAME_FAIL_PARAMS = "fail_params";
  @SerializedName(SERIALIZED_NAME_FAIL_PARAMS)
  private String failParams;

  public static final String SERIALIZED_NAME_FAIL_REASON = "fail_reason";
  @SerializedName(SERIALIZED_NAME_FAIL_REASON)
  private String failReason;

  public static final String SERIALIZED_NAME_PASSED = "passed";
  @SerializedName(SERIALIZED_NAME_PASSED)
  private String passed;

  public AlipayUserCertdocCertverifyConsultResponseModel() { 
  }

  public AlipayUserCertdocCertverifyConsultResponseModel failParams(String failParams) {
    
    this.failParams = failParams;
    return this;
  }

   /**
   * 具体哪些字段不一致。与预授权的输入字段对应，类型为字符串列表的JSON格式。
   * @return failParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"user_name\"]", value = "具体哪些字段不一致。与预授权的输入字段对应，类型为字符串列表的JSON格式。")

  public String getFailParams() {
    return failParams;
  }


  public void setFailParams(String failParams) {
    this.failParams = failParams;
  }


  public AlipayUserCertdocCertverifyConsultResponseModel failReason(String failReason) {
    
    this.failReason = failReason;
    return this;
  }

   /**
   * 校验不一致时，描述不一致的原因
   * @return failReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "姓名不一致", value = "校验不一致时，描述不一致的原因")

  public String getFailReason() {
    return failReason;
  }


  public void setFailReason(String failReason) {
    this.failReason = failReason;
  }


  public AlipayUserCertdocCertverifyConsultResponseModel passed(String passed) {
    
    this.passed = passed;
    return this;
  }

   /**
   * 校验是否一致：T-一致、F-不一致
   * @return passed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "F", value = "校验是否一致：T-一致、F-不一致")

  public String getPassed() {
    return passed;
  }


  public void setPassed(String passed) {
    this.passed = passed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayUserCertdocCertverifyConsultResponseModel alipayUserCertdocCertverifyConsultResponseModel = (AlipayUserCertdocCertverifyConsultResponseModel) o;
    return Objects.equals(this.failParams, alipayUserCertdocCertverifyConsultResponseModel.failParams) &&
        Objects.equals(this.failReason, alipayUserCertdocCertverifyConsultResponseModel.failReason) &&
        Objects.equals(this.passed, alipayUserCertdocCertverifyConsultResponseModel.passed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failParams, failReason, passed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayUserCertdocCertverifyConsultResponseModel {\n");
    sb.append("    failParams: ").append(toIndentedString(failParams)).append("\n");
    sb.append("    failReason: ").append(toIndentedString(failReason)).append("\n");
    sb.append("    passed: ").append(toIndentedString(passed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fail_params");
    openapiFields.add("fail_reason");
    openapiFields.add("passed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayUserCertdocCertverifyConsultResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayUserCertdocCertverifyConsultResponseModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayUserCertdocCertverifyConsultResponseModel is not found in the empty JSON string", AlipayUserCertdocCertverifyConsultResponseModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayUserCertdocCertverifyConsultResponseModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayUserCertdocCertverifyConsultResponseModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("fail_params") != null && !jsonObj.get("fail_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fail_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fail_params").toString()));
      }
      if (jsonObj.get("fail_reason") != null && !jsonObj.get("fail_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fail_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fail_reason").toString()));
      }
      if (jsonObj.get("passed") != null && !jsonObj.get("passed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayUserCertdocCertverifyConsultResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayUserCertdocCertverifyConsultResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayUserCertdocCertverifyConsultResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayUserCertdocCertverifyConsultResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayUserCertdocCertverifyConsultResponseModel>() {
           @Override
           public void write(JsonWriter out, AlipayUserCertdocCertverifyConsultResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayUserCertdocCertverifyConsultResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayUserCertdocCertverifyConsultResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayUserCertdocCertverifyConsultResponseModel
  * @throws IOException if the JSON string is invalid with respect to AlipayUserCertdocCertverifyConsultResponseModel
  */
  public static AlipayUserCertdocCertverifyConsultResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayUserCertdocCertverifyConsultResponseModel.class);
  }

 /**
  * Convert an instance of AlipayUserCertdocCertverifyConsultResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

